repos:
  # Pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: forbid-new-submodules
        stages: [commit]
      - id: fix-encoding-pragma
        args: [--remove]
        stages: [commit]
      - id: end-of-file-fixer
        stages: [commit]
      - id: trailing-whitespace
        stages: [commit]
      - id: debug-statements
        stages: [commit]
      - id: detect-private-key
        stages: [commit]
      - id: check-builtin-literals
        stages: [commit]
      - id: check-case-conflict
        stages: [commit]
      - id: check-executables-have-shebangs
        stages: [commit]
      - id: check-merge-conflict
        stages: [commit]
      - id: check-symlinks
        stages: [commit]
      - id: check-toml
        stages: [commit]

  # Codespell
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        description: Checks for common misspellings.
        types_or: [python, rst, markdown]
        args: [--ignore-words-list=SME]

  - repo: https://github.com/asottile/add-trailing-comma
    rev: v3.1.0
    hooks:
      - id: add-trailing-comma
        name: add-trailing-comma
        types: [python]

  # Black
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        args: [
            --line-length=100,
        ]

  # Isort
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        stages: [commit]
        args: [
            --combine-as,
            --line-length=100,
            --ensure-newline-before-comments,
            --force-single-line-imports,
            --single-line-exclusions=typing,
            --trailing-comma,
            --multi-line=3,
            --lines-after-imports=2,
            --use-parentheses,
        ]

  # Flake8
  - repo: https://github.com/pycqa/flake8
    rev: 7.2.0
    hooks:
      - id: flake8
        name: flake8
        additional_dependencies:
          - flake8-2020
          - flake8-bandit
          - flake8-bugbear
          - flake8-coding
          - flake8-comprehensions
          - flake8-debugger
          - flake8-deprecated
#          - flake8-docstrings
          - flake8-pep3101
          - flake8-string-format
#          - flake8-rst-docstrings
#          - flake8-typing-imports
#          - pep8-naming
        types: [python]
        args: [
            --max-complexity=10,
            --max-line-length=150,
            --statistics,
            --ignore=C101 RST210 S101 W503,
            --per-file-ignores=
                oups/__init__.py:F401
                oups/store/__init__.py:F401
                oups/store/router.py:S403 S301
                oups/store/write/write.py:C901 S403 S301
                oups/aggstream/__init__.py:F401
                oups/aggstream/jcumsegagg.py:C901
                oups/aggstream/segmentby.py:C901
                oups/aggstream/cumsegagg.py:C901 E203
                oups/aggstream/aggstream.py:C901
                tests/*.py:D103
        ]

  # Pydocstyle
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        files: ^oups/
        additional_dependencies:
          - toml
        args: [
          "--ignore=D200,D203,D212,D417",
          ]

  - repo: https://github.com/PyCQA/docformatter
    rev: v1.7.6
    hooks:
      - id: docformatter
        language: python
        additional_dependencies: [tomli]
        args: [
          "--black",
          "--make-summary-multi-line",
          "--pre-summary-newline",
          "--blank",
          "--recursive",
          "--in-place",
        ]

  - repo: https://github.com/asottile/add-trailing-comma
    rev: v3.1.0
    hooks:
      - id: add-trailing-comma
        name: add-trailing-comma
        types: [python]

# flake8 ignore justifications
# ----------------------------
# C901: Function is too complex
# D103: Missing docstring in public function
# RST210: Inline strong start-string without end-string (when describing **kwargs parameter)
# S101: Use of assert detected (use of assert normal for pytest)
# W503: Line break before binary operator
# S403 & S301: Use of pickle to serialize / unserialize data.
